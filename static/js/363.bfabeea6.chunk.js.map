{"version":3,"file":"static/js/363.bfabeea6.chunk.js","mappings":"uMAGaA,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,8BACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,0BACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,SACGI,KAFKD,U,0MCPlBK,IAAAA,SAAAA,QAAA,+BACA,IAAMC,EAAS,mCAGFC,EAAkB,mCAAG,sGACPF,IAAAA,IAAA,sCAAyCC,IADlC,uBACtBE,EADsB,EACtBA,KADsB,kBAEvBA,EAAKC,SAFkB,2CAAH,qDAKlBC,EAAU,mCAAG,WAAOV,GAAP,yFACCK,IAAAA,IAAA,iBAAoBL,EAApB,oBAAkCM,EAAlC,oBADD,uBACdE,EADc,EACdA,KADc,kBAEfA,GAFe,2CAAH,sDAKVG,EAAgB,mCAAG,WAAOX,GAAP,yFACLK,IAAAA,IAAA,iBAAoBL,EAApB,4BAA0CM,EAA1C,oBADK,uBACpBE,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKhBI,EAAiB,mCAAG,WAAOZ,GAAP,yFACNK,IAAAA,IAAA,iBAAoBL,EAApB,4BAA0CM,EAA1C,2BADM,uBACrBE,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKjBK,EAAgB,mCAAG,WAAOC,GAAP,yFACLT,IAAAA,IAAA,gCAAmCC,EAAnC,iCAAkEQ,EAAlE,gCADK,uBACpBN,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,uD,uGCvBhBO,EAAUC,EAAAA,GAAAA,IAAH,wEAKPC,EAAOD,EAAAA,GAAAA,IAAH,iE,8GCLJE,E,QAAOF,GAAAA,KAAH,gD,SCCJG,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC5B,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACE,UAACL,EAAD,CAAME,SAda,SAAAI,GACnBA,EAAEC,iBAEF,IAAMC,EAAkBJ,EAAWK,OAAOC,cACrCF,GAKLN,EAASM,GACTH,EAAc,KALZA,EAAc,KAShB,WACE,kBACEM,KAAK,OACLf,KAAK,YACLgB,YAAY,gBACZC,MAAOT,EACPU,SAAU,SAAAR,GAAC,OAAID,EAAcC,EAAES,OAAOF,WAExC,mBAAQF,KAAK,SAAb,wB,gDCIN,EA5BwB,WACtB,OAA4BR,EAAAA,EAAAA,UAAS,MAArC,eAAOzB,EAAP,KAAesC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAsB/B,OAhBAC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAIA,IAAMG,EAAc,mCAAG,8EACrB,KACe5B,EAAAA,EAAAA,IAAiByB,GACzBI,MAAK,SAAAC,GAAG,OAAIT,EAAUS,EAAIlC,YAC/B,MAAOmC,GACPC,QAAQD,MAAMA,GALK,2CAAH,qDAQpBH,OACC,CAACH,IAEG,CAAE1C,OAAAA,EAAQkD,aApBI,SAAAR,GACnBD,EAAgB,CAAEC,MAAAA,O,oBCQtB,EAZmB,WACjB,MAAiCS,IAAzBnD,EAAR,EAAQA,OAAQkD,EAAhB,EAAgBA,aAEhB,OACE,UAAC,IAAD,YACE,SAAC3B,EAAD,CAAaC,SAAU0B,IACtBlD,IAAU,SAACD,EAAA,EAAD,CAAWC,OAAQA,KAC9B,SAAC,KAAD","sources":["components/MovieList/MovieList.jsx","components/service/movie-service.js","pages/MovieDetails/MovieDetails.styled.js","components/SearchMovie/SearchMovie.styled.jsx","components/SearchMovie/SearchMovie.jsx","hooks/useSearchMovies.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      {movies.map(({ id, title }) => (\n        <div key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </div>\n      ))}\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n    })\n  ),\n};\n","import axios from 'axios';\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\nconst apiKEY = '0bd2f89e5997215ec06dea49692dc792';\n   \n\nexport const fetchTrendingToday = async () => {\n    const { data } = await axios.get(`/trending/movie/day?api_key=${apiKEY}`);\n    return data.results;\n};\n  \nexport const fetchMovie = async (id) => {\n    const { data } = await axios.get(`/movie/${id}?api_key=${apiKEY}&language=en-US`);\n    return data;\n};\n  \nexport const fetchActorsMovie = async (id) => {\n    const { data } = await axios.get(`/movie/${id}/credits?api_key=${apiKEY}&language=en-US`);\n    return data;\n};\n\nexport const fetchReviewsMovie = async (id) => {\n    const { data } = await axios.get(`/movie/${id}/reviews?api_key=${apiKEY}&language=en-US&page=1`);\n    return data;\n};\n\nexport const fetchSearchMovie = async (name) => {\n    const { data } = await axios.get(`/search/movie?api_key=${apiKEY}&language=en-US&query=${name}&page=1&include_adult=false`);\n    return data;\n};","import styled from \"styled-components\";\n\nexport const Section = styled.div`\npadding: 35px;\nborder-bottom: 3px solid grey;\n`\n\nexport const List = styled.div`\ndisplay: flex;\nflex-direction: column\n`","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin-bottom: 35px;\n`;\n","import { useState } from 'react';\nimport { Form } from './SearchMovie.styled';\n\nexport const SearchMovie = ({ onSubmit }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const normalizedValue = inputValue.trim().toLowerCase();\n    if (!normalizedValue) {\n      setInputValue('');\n      return;\n    }\n\n    onSubmit(normalizedValue);\n    setInputValue('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"movieName\"\n        placeholder=\"Search movies\"\n        value={inputValue}\n        onChange={e => setInputValue(e.target.value)}\n      />\n      <button type=\"submit\">Search</button>\n    </Form>\n  );\n};\n","import { fetchSearchMovie } from 'components/service/movie-service';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst useSearchMovies = () => {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const handleSubmit = query => {\n    setSearchParams({ query });\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    const getMovieByName = async () => {\n      try {\n        const data = fetchSearchMovie(query);\n        data.then(res => setMovies(res.results));\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getMovieByName();\n  }, [query]);\n\n  return { movies, handleSubmit };\n};\n\nexport default useSearchMovies;\n","import { MovieList } from 'components/MovieList/MovieList';\nimport { SearchMovie } from 'components/SearchMovie/SearchMovie';\nimport useSearchMovies from 'hooks/useSearchMovies';\nimport { Outlet } from 'react-router-dom';\nimport { Section } from '../MovieDetails/MovieDetails.styled';\n\nconst MoviesPage = () => {\n  const { movies, handleSubmit } = useSearchMovies();\n\n  return (\n    <Section>\n      <SearchMovie onSubmit={handleSubmit} />\n      {movies && <MovieList movies={movies} />}\n      <Outlet />\n    </Section>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["MovieList","movies","location","useLocation","map","id","title","to","state","from","axios","apiKEY","fetchTrendingToday","data","results","fetchMovie","fetchActorsMovie","fetchReviewsMovie","fetchSearchMovie","name","Section","styled","List","Form","SearchMovie","onSubmit","useState","inputValue","setInputValue","e","preventDefault","normalizedValue","trim","toLowerCase","type","placeholder","value","onChange","target","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getMovieByName","then","res","error","console","handleSubmit","useSearchMovies"],"sourceRoot":""}