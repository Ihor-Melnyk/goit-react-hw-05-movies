{"version":3,"file":"static/js/Home.19a1be60.chunk.js","mappings":"uMAGaA,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,8BACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,0BACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,SACGI,KAFKD,U,0MCPlBK,IAAAA,SAAAA,QAAA,+BACA,IAAMC,EAAS,mCAGFC,EAAkB,mCAAG,sGACPF,IAAAA,IAAA,sCAAyCC,IADlC,uBACtBE,EADsB,EACtBA,KADsB,kBAEvBA,EAAKC,SAFkB,2CAAH,qDAKlBC,EAAU,mCAAG,WAAOV,GAAP,yFACCK,IAAAA,IAAA,iBAAoBL,EAApB,oBAAkCM,EAAlC,oBADD,uBACdE,EADc,EACdA,KADc,kBAEfA,GAFe,2CAAH,sDAKVG,EAAgB,mCAAG,WAAOX,GAAP,yFACLK,IAAAA,IAAA,iBAAoBL,EAApB,4BAA0CM,EAA1C,oBADK,uBACpBE,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKhBI,EAAiB,mCAAG,WAAOZ,GAAP,yFACNK,IAAAA,IAAA,iBAAoBL,EAApB,4BAA0CM,EAA1C,2BADM,uBACrBE,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKjBK,EAAgB,mCAAG,WAAOC,GAAP,yFACLT,IAAAA,IAAA,gCAAmCC,EAAnC,iCAAkEQ,EAAlE,gCADK,uBACpBN,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,uD,mGCvBhBO,EAAS,WACpB,OAAO,SAAC,MAAD,K,0DCaT,EAZa,WACX,MCFoC,WACpC,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOpB,EAAP,KAAeqB,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAkCH,EAAAA,EAAAA,UAAS,MAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GAEb,IAAME,EAAgB,mCAAG,8GAEFhB,EAAAA,EAAAA,MAFE,cAEfC,EAFe,yBAGdS,EAAUT,IAHI,gCAKrBW,GAAS,GACTK,QAAQN,MAAR,MANqB,yBAQrBG,GAAa,GARQ,4EAAH,qDAWtBE,MACC,IAEI,CAAE3B,OAAAA,EAAQsB,MAAAA,EAAOE,UAAAA,GDpBaK,GAA7B7B,EAAR,EAAQA,OAAQsB,EAAhB,EAAgBA,MAAOE,EAAvB,EAAuBA,UACvB,OACE,gCACGF,GAASM,QAAQE,IAAIR,GACrBE,IAAa,SAACL,EAAD,KACd,4CACA,SAACpB,EAAA,EAAD,CAAWC,OAAQA","sources":["components/MovieList/MovieList.jsx","components/service/movie-service.js","components/Loader/Loader.jsx","pages/Home.jsx","hooks/useFetchTrendingMovies.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      {movies.map(({ id, title }) => (\n        <div key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </div>\n      ))}\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n    })\n  ),\n};\n","import axios from 'axios';\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\nconst apiKEY = '0bd2f89e5997215ec06dea49692dc792';\n   \n\nexport const fetchTrendingToday = async () => {\n    const { data } = await axios.get(`/trending/movie/day?api_key=${apiKEY}`);\n    return data.results;\n};\n  \nexport const fetchMovie = async (id) => {\n    const { data } = await axios.get(`/movie/${id}?api_key=${apiKEY}&language=en-US`);\n    return data;\n};\n  \nexport const fetchActorsMovie = async (id) => {\n    const { data } = await axios.get(`/movie/${id}/credits?api_key=${apiKEY}&language=en-US`);\n    return data;\n};\n\nexport const fetchReviewsMovie = async (id) => {\n    const { data } = await axios.get(`/movie/${id}/reviews?api_key=${apiKEY}&language=en-US&page=1`);\n    return data;\n};\n\nexport const fetchSearchMovie = async (name) => {\n    const { data } = await axios.get(`/search/movie?api_key=${apiKEY}&language=en-US&query=${name}&page=1&include_adult=false`);\n    return data;\n};","import { ImSpinner10 } from 'react-icons/im';\n\nexport const Loader = () => {\n  return <ImSpinner10 />;\n};\n","import { MovieList } from '../components/MovieList/MovieList';\nimport { Loader } from 'components/Loader/Loader';\nimport { useFetchTrendingMovies } from 'hooks/useFetchTrendingMovies';\n\nconst Home = () => {\n  const { movies, error, isLoading } = useFetchTrendingMovies();\n  return (\n    <>\n      {error && console.log(error)}\n      {isLoading && <Loader />}\n      <h1>Trending today</h1>\n      <MovieList movies={movies} />\n    </>\n  );\n};\n\nexport default Home;\n","import { fetchTrendingToday } from 'components/service/movie-service';\nimport { useEffect, useState } from 'react';\n\nexport const useFetchTrendingMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const getTrendingToday = async () => {\n      try {\n        const data = await fetchTrendingToday();\n        return setMovies(data);\n      } catch (error) {\n        setError(true);\n        console.error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getTrendingToday();\n  }, []);\n\n  return { movies, error, isLoading };\n};\n"],"names":["MovieList","movies","location","useLocation","map","id","title","to","state","from","axios","apiKEY","fetchTrendingToday","data","results","fetchMovie","fetchActorsMovie","fetchReviewsMovie","fetchSearchMovie","name","Loader","useState","setMovies","error","setError","isLoading","setIsLoading","useEffect","getTrendingToday","console","useFetchTrendingMovies","log"],"sourceRoot":""}